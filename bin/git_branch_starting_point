#! /bin/bash

# git rev-list: Lists commit objects in reverse chronological order
#
# It provides a number of options to filter this list of objects.
# One filter that it not present is to select the commit in which
# a branch is created.
#
# This script can be used to determine this commit:
#
# Proposal command:
#
#   git branch --starting-point  <branch> [main_branch]
#
#      - determines the commit point on the main_branch in which 
#        the command `git branch <branch>` was executed
#      - the default main_branch is 'main'
#
# Current command:
#
#   git_branch_starting_point  <branch> [main_branch]   
#

function git_branch_starting_point () {
  branch="$1"
  main="$2"

  [[ -z "${main}" ]] && main="main"

  _commit=$( diff -u <(git rev-list --first-parent ${branch} --) \
                     <(git rev-list --first-parent ${main} -- ) | \
             sed -n '/^@@/,$s/^ //p' | sed -n '1p' )

  if [[ -z $_commit ]] ; then
    # If a fast-forward merge was perform, all commits are in common
    # Hence, the branching point is the same for both
    _commit=$(git log rev-list ${main} | tail -1)
  fi
  echo $_commit
}

git_branch_starting_point "$@"
